{"ActionItemOverrideManager":[{"label":"overridesActive","kind":10,"detail":"boolean : Read|Write"},{"label":"timeToStartOverride","kind":10,"detail":"float : Read|Write"}],"AnimLayerManager":[{"label":"filterActiveOnly","kind":10,"detail":"bool : Read|Write"},{"label":"justUpToActive","kind":10,"detail":"bool : Read|Write"},{"label":"getLayerName","kind":2,"detail":"<TSTR by value>getLayerName <index>listIndex\nlistIndex Validated by Validator function"},{"label":"GetCollapsePerFrame()","kind":2,"detail":"<bool>GetCollapsePerFrame()"},{"label":"GetCollapsePerFrameActiveRange()","kind":2,"detail":"<bool>GetCollapsePerFrameActiveRange()"},{"label":"getLayerLocked","kind":2,"detail":"<bool>getLayerLocked <index>listIndex\nlistIndex Validated by Validator function"},{"label":"getLayerMute","kind":2,"detail":"<bool>getLayerMute <index>listIndex\nlistIndex Validated by Validator function"},{"label":"getLayerOutputMute","kind":2,"detail":"<bool>getLayerOutputMute <index>listIndex\nlistIndex Validated by Validator function"},{"label":"setLayerWeightControl","kind":2,"detail":"<bool>setLayerWeightControl <index>listIndex <control>control\nlistIndex Validated by Validator function"},{"label":"canEnableLayer","kind":2,"detail":"<boolean>canEnableLayer <maxObject>anim <maxObject>client <index>subNum"},{"label":"enableLayer","kind":2,"detail":"<boolean>enableLayer <maxObject>anim <maxObject>client <index>subNum"},{"label":"getLayerWeightControl","kind":2,"detail":"<control>getLayerWeightControl <index>listIndex\nlistIndex Validated by Validator function"},{"label":"getLayerWeight","kind":2,"detail":"<float>getLayerWeight <index>listIndex <time>atTime\nlistIndex Validated by Validator function"},{"label":"getActiveLayersNodes","kind":2,"detail":"<index array>getActiveLayersNodes <&node array>nodes\nnodes is In and Out parameter"},{"label":"getNodesLayers","kind":2,"detail":"<index array>getNodesLayers <&node array>nodes\nnodes is In and Out parameter"},{"label":"getLayerCount()","kind":2,"detail":"<index>getLayerCount()"},{"label":"enableLayers","kind":2,"detail":"<integer>enableLayers <&node array>nodes pos:<boolean> rot:<boolean> scale:<boolean> ik:<boolean> object:<boolean> customAtt:<boolean> mod:<boolean> mat:<boolean> other:<boolean>\nnodes is In and Out parameter\npos default value: true\nrot default value: true\nscale default value: true\nik default value: false\nobject default value: false\ncustomAtt default value: false\nmod default value: false\nmat default value: false\nother default value: false"},{"label":"enableLayersDlg","kind":2,"detail":"<integer>enableLayersDlg <&node array>nodes\nnodes is In and Out parameter"},{"label":"SetCollapseControllerType","kind":2,"detail":"<void>SetCollapseControllerType <enum>controllerType\ncontrollerType enums: {#Bezier|#Linear|#Default}"},{"label":"SetCollapsePerFrame","kind":2,"detail":"<void>SetCollapsePerFrame <bool>keyable"},{"label":"SetCollapsePerFrameActiveRange","kind":2,"detail":"<void>SetCollapsePerFrameActiveRange <bool>activeRange"},{"label":"SetCollapseRange","kind":2,"detail":"<void>SetCollapseRange <interval>range"},{"label":"addLayer","kind":2,"detail":"<void>addLayer <&TSTR>name <&node array>nodes <bool>useActiveControllerType\nname is In and Out parameter\nnodes is In and Out parameter"},{"label":"addLayerDlg","kind":2,"detail":"<void>addLayerDlg <&node array>nodes\nnodes is In and Out parameter"},{"label":"animLayerPropertiesDlg()","kind":2,"detail":"<void>animLayerPropertiesDlg()"},{"label":"collapseLayerNodes","kind":2,"detail":"<void>collapseLayerNodes <index>listIndex <&node array>nodes\nlistIndex Validated by Validator function\nnodes is In and Out parameter"},{"label":"copyLayerNodes","kind":2,"detail":"<void>copyLayerNodes <index>listIndex <&node array>nodes\nlistIndex Validated by Validator function\nnodes is In and Out parameter"},{"label":"deleteLayer","kind":2,"detail":"<void>deleteLayer <index>listIndex\nlistIndex Validated by Validator function"},{"label":"deleteLayerNodes","kind":2,"detail":"<void>deleteLayerNodes <index>listIndex <&node array>nodes\nlistIndex Validated by Validator function\nnodes is In and Out parameter"},{"label":"disableLayerNodes","kind":2,"detail":"<void>disableLayerNodes <&node array>nodes\nnodes is In and Out parameter"},{"label":"getNodesActiveLayer","kind":2,"detail":"<void>getNodesActiveLayer <&node array>nodes\nnodes is In and Out parameter"},{"label":"pasteLayerNodes","kind":2,"detail":"<void>pasteLayerNodes <index>listIndex <&node array>nodes\nlistIndex Validated by Validator function\nnodes is In and Out parameter"},{"label":"refreshAnimLayerPropertiesDlg()","kind":2,"detail":"<void>refreshAnimLayerPropertiesDlg()"},{"label":"setLayerActive","kind":2,"detail":"<void>setLayerActive <index>listIndex\nlistIndex Validated by Validator function"},{"label":"setLayerActiveNodes","kind":2,"detail":"<void>setLayerActiveNodes <index>listIndex <&node array>nodes\nlistIndex Validated by Validator function\nnodes is In and Out parameter"},{"label":"setLayerLocked","kind":2,"detail":"<void>setLayerLocked <index>listIndex <bool>locked\nlistIndex Validated by Validator function"},{"label":"setLayerMute","kind":2,"detail":"<void>setLayerMute <index>listIndex <bool>mute\nlistIndex Validated by Validator function"},{"label":"setLayerName","kind":2,"detail":"<void>setLayerName <index>listIndex <TSTR by value>name\nlistIndex Validated by Validator function"},{"label":"setLayerOutputMute","kind":2,"detail":"<void>setLayerOutputMute <index>listIndex <bool>mute\nlistIndex Validated by Validator function"},{"label":"setLayerWeight","kind":2,"detail":"<void>setLayerWeight <index>listIndex <time>atTime <float>weight\nlistIndex Validated by Validator function"},{"label":"showAnimLayersManagerToolbar","kind":2,"detail":"<void>showAnimLayersManagerToolbar <bool>show"}],"assemblyMgr":[{"label":"Attach","kind":2,"detail":"<bool>Attach <node array>nodes assembly:<node>\nassembly default value: undefined"},{"label":"CanAssemble","kind":2,"detail":"<bool>CanAssemble <node array>nodes"},{"label":"CanAttach","kind":2,"detail":"<bool>CanAttach <node array>nodes assembly:<node>\nassembly default value: undefined"},{"label":"CanClose","kind":2,"detail":"<bool>CanClose <node array>nodes"},{"label":"CanDetach","kind":2,"detail":"<bool>CanDetach <node array>nodes"},{"label":"CanDisassemble","kind":2,"detail":"<bool>CanDisassemble <node array>nodes"},{"label":"CanExplode","kind":2,"detail":"<bool>CanExplode <node array>nodes"},{"label":"CanOpen","kind":2,"detail":"<bool>CanOpen <node array>nodes"},{"label":"Close","kind":2,"detail":"<bool>Close <node array>nodes select:<bool>\nselect default value: true"},{"label":"Detach","kind":2,"detail":"<bool>Detach <node array>nodes"},{"label":"Disassemble","kind":2,"detail":"<bool>Disassemble <node array>nodes"},{"label":"Explode","kind":2,"detail":"<bool>Explode <node array>nodes"},{"label":"Open","kind":2,"detail":"<bool>Open <node array>nodes clearSelection:<bool>\nclearSelection default value: true"},{"label":"Assemble","kind":2,"detail":"<node>Assemble <node array>nodeslabel:<string> classdetail:<class> select:<bool>\nname default value: undefined\nclassDesc default value: undefined\nselect default value: true"},{"label":"IsAssembly","kind":2,"detail":"<node>IsAssembly <node array>nodes"}],"ATSOps":[{"label":"AutoLogin","kind":10,"detail":"bool : Read|Write"},{"label":"CheckNetworkPaths","kind":10,"detail":"bool : Read|Write"},{"label":"Disabled","kind":10,"detail":"bool : Read|Write"},{"label":"DisplayExcluded","kind":10,"detail":"bool : Read|Write"},{"label":"ExcludeOutputFiles","kind":10,"detail":"bool : Read|Write"},{"label":"Silent","kind":10,"detail":"bool : Read|Write"},{"label":"TableView","kind":10,"detail":"bool : Read|Write"},{"label":"TreeView","kind":10,"detail":"bool : Read|Write"},{"label":"Visible","kind":10,"detail":"bool : Read|Write"},{"label":"AddAttachmentToNotificationFileListEntry","kind":2,"detail":"<bool>AddAttachmentToNotificationFileListEntry <index>FileListIndex <filename>Filename\nAddAttachmentToNotificationFileListEntry - no automatic redraw after invoked"},{"label":"AddFileToNotificationFileList","kind":2,"detail":"<bool>AddFileToNotificationFileList <filename>Filename\nAddFileToNotificationFileList - no automatic redraw after invoked"},{"label":"AddFiles","kind":2,"detail":"<bool>AddFiles <index>ProviderIndex <&filename array>FileList <&TSTR>Comment IsHidden:<&bool array>\nAddFiles - no automatic redraw after invoked\nFileList is In parameter\nComment is In and Out parameter\nIsHidden default value: #()\nIsHidden is In parameter"},{"label":"CanGetFromProvider","kind":2,"detail":"<bool>CanGetFromProvider <index>ProviderIndex\nCanGetFromProvider - no automatic redraw after invoked"},{"label":"Checkin","kind":2,"detail":"<bool>Checkin <index>ProviderIndex <&filename array>FileList <&TSTR>Comment\nCheckin - no automatic redraw after invoked\nFileList is In parameter\nComment is In and Out parameter"},{"label":"Checkout","kind":2,"detail":"<bool>Checkout <index>ProviderIndex <&filename array>FileList <&TSTR>Comment\nCheckout - no automatic redraw after invoked\nFileList is In parameter\nComment is In and Out parameter"},{"label":"GetLatest","kind":2,"detail":"<bool>GetLatest <index>ProviderIndex <&filename array>FileList\nGetLatest - no automatic redraw after invoked\nFileList is In parameter"},{"label":"GetVersion","kind":2,"detail":"<bool>GetVersion <index>ProviderIndex <filename>Filename <integer>VersionNumber\nGetVersion - no automatic redraw after invoked"},{"label":"IsFileExcluded","kind":2,"detail":"<bool>IsFileExcluded <index>ProviderIndex <filename>Filename\nIsFileExcluded - no automatic redraw after invoked"},{"label":"IsFileShareLocked","kind":2,"detail":"<bool>IsFileShareLocked <index>ProviderIndex <filename>Filename\nIsFileShareLocked - no automatic redraw after invoked"},{"label":"IsInitialized","kind":2,"detail":"<bool>IsInitialized <index>ProviderIndex\nIsInitialized - no automatic redraw after invoked"},{"label":"IsInputFile","kind":2,"detail":"<bool>IsInputFile <filename>Filename\nIsInputFile - no automatic redraw after invoked"},{"label":"IsProjectOpen","kind":2,"detail":"<bool>IsProjectOpen <index>ProviderIndex\nIsProjectOpen - no automatic redraw after invoked"},{"label":"RegisterNotification","kind":2,"detail":"<bool>RegisterNotification <value>Callback <integer>ID\nRegisterNotification - no automatic redraw after invoked"},{"label":"RemoveFileFromNotificationFileList","kind":2,"detail":"<bool>RemoveFileFromNotificationFileList <index>FileListIndex\nRemoveFileFromNotificationFileList - no automatic redraw after invoked"},{"label":"ResolveSelectionRelativeToProjectFolder()","kind":2,"detail":"<bool>ResolveSelectionRelativeToProjectFolder()"},{"label":"ResolveSelectionToUNC()","kind":2,"detail":"<bool>ResolveSelectionToUNC()"},{"label":"RetargetAssets","kind":2,"detail":"<bool>RetargetAssets <&maxObject>AssetOwner <filename>OldPath <filename>NewPath CreateOutputFolder:<bool>\nAssetOwner is In parameter\nCreateOutputFolder default value: false"},{"label":"RetargetCommonRoot","kind":2,"detail":"<bool>RetargetCommonRoot <filename>NewPath CreateOutputFolder:<bool>\nCreateOutputFolder default value: false"},{"label":"RetargetCommonRootOfSelection","kind":2,"detail":"<bool>RetargetCommonRootOfSelection <filename>NewPath CreateOutputFolder:<bool>\nCreateOutputFolder default value: false"},{"label":"RetargetSelection","kind":2,"detail":"<bool>RetargetSelection <filename>NewPath CreateOutputFolder:<bool>\nCreateOutputFolder default value: false"},{"label":"SetPath","kind":2,"detail":"<bool>SetPath <filename>NewPath CreateOutputFolder:<bool>\nCreateOutputFolder default value: false"},{"label":"SetPathOnSelection","kind":2,"detail":"<bool>SetPathOnSelection <filename>NewPath CreateOutputFolder:<bool>\nCreateOutputFolder default value: false"},{"label":"TestFileStatus","kind":2,"detail":"<bool>TestFileStatus <index>ProviderIndex <filename>Filename <enum>Status\nTestFileStatus - no automatic redraw after invoked\nStatus enums: {#Unknown|#NotControlled|#Controlled|#CheckedOut|#CheckedOutOther|#OutOfDate|#Deleted|#Missing|#Modified|#Hidden|#ShareLock|#CanCheckin|#CanCheckout|#CanUndoCheckout|#CanGetLatest|#CanAddFile|#CanShowHistory|#CanShowProperties}"},{"label":"TestFileSystemStatus","kind":2,"detail":"<bool>TestFileSystemStatus <filename>Filename <enum>Status\nTestFileSystemStatus - no automatic redraw after invoked\nStatus enums: {#Unknown|#Ok|#Missing|#Found|#NetworkPath}"},{"label":"UndoCheckout","kind":2,"detail":"<bool>UndoCheckout <index>ProviderIndex <&filename array>FileList\nUndoCheckout - no automatic redraw after invoked\nFileList is In parameter"},{"label":"GetWorkingFolder","kind":2,"detail":"<filename>GetWorkingFolder <index>ProviderIndex\nGetWorkingFolder - no automatic redraw after invoked"},{"label":"GetDependencyFileList","kind":2,"detail":"<integer>GetDependencyFileList <maxObject>Dependent <&filename array>FileList <bool>includeRefHierarchy\nGetDependencyFileList - no automatic redraw after invoked\nFileList is Out parameter"},{"label":"GetDependentFiles","kind":2,"detail":"<integer>GetDependentFiles <filename>Filename <bool>Recurse <&filename array>FileList IncludeOutputFiles:<bool>\nGetDependentFiles - no automatic redraw after invoked\nFileList is Out parameter\nIncludeOutputFiles default value: true"},{"label":"GetFiles","kind":2,"detail":"<integer>GetFiles <&filename array>FileList\nGetFiles - no automatic redraw after invoked\nFileList is Out parameter"},{"label":"GetFilesByFileSystemStatus","kind":2,"detail":"<integer>GetFilesByFileSystemStatus <enum>Status <&filename array>FileList\nGetFilesByFileSystemStatus - no automatic redraw after invoked\nStatus enums: {#Unknown|#Ok|#Missing|#Found|#NetworkPath}\nFileList is Out parameter"},{"label":"GetMaxVersion","kind":2,"detail":"<integer>GetMaxVersion <index>ProviderIndex <filename>Filename\nGetMaxVersion - no automatic redraw after invoked"},{"label":"GetMinVersion","kind":2,"detail":"<integer>GetMinVersion <index>ProviderIndex <filename>Filename\nGetMinVersion - no automatic redraw after invoked"},{"label":"GetNotificationFileList","kind":2,"detail":"<integer>GetNotificationFileList <&filename array>FileList\nGetNotificationFileList - no automatic redraw after invoked\nFileList is Out parameter"},{"label":"GetResolvedPaths","kind":2,"detail":"<integer>GetResolvedPaths <&filename array>FileList <&filename array>ResolvedFileList\nGetResolvedPaths - no automatic redraw after invoked\nFileList is In parameter\nResolvedFileList is Out parameter"},{"label":"GetSelectedFiles","kind":2,"detail":"<integer>GetSelectedFiles <&filename array>FileList\nGetSelectedFiles - no automatic redraw after invoked\nFileList is Out parameter"},{"label":"GetProviderName","kind":2,"detail":"<string>GetProviderName <index>ProviderIndex\nGetProviderName - no automatic redraw after invoked"},{"label":"GetFileStatus","kind":2,"detail":"<value>GetFileStatus <index>ProviderIndex <filename>Filename\nGetFileStatus - no automatic redraw after invoked"},{"label":"GetFileSystemStatus","kind":2,"detail":"<value>GetFileSystemStatus <filename>Filename\nGetFileSystemStatus - no automatic redraw after invoked"},{"label":"AppendStatusLog","kind":2,"detail":"<void>AppendStatusLog <string>Status\nAppendStatusLog - no automatic redraw after invoked"},{"label":"CheckForCheckedOutFiles","kind":2,"detail":"<void>CheckForCheckedOutFiles <index>ProviderIndex\nCheckForCheckedOutFiles - no automatic redraw after invoked"},{"label":"CheckForDependentFiles","kind":2,"detail":"<void>CheckForDependentFiles <index>ProviderIndex <filename>Filename\nCheckForDependentFiles - no automatic redraw after invoked"},{"label":"CheckForOutDatedFiles","kind":2,"detail":"<void>CheckForOutDatedFiles <index>ProviderIndex\nCheckForOutDatedFiles - no automatic redraw after invoked"},{"label":"CheckForSceneFileCheckOut","kind":2,"detail":"<void>CheckForSceneFileCheckOut <index>ProviderIndex\nCheckForSceneFileCheckOut - no automatic redraw after invoked"},{"label":"CheckForUnControlledFiles","kind":2,"detail":"<void>CheckForUnControlledFiles <index>ProviderIndex\nCheckForUnControlledFiles - no automatic redraw after invoked"},{"label":"CloseProject","kind":2,"detail":"<void>CloseProject <index>ProviderIndex\nCloseProject - no automatic redraw after invoked"},{"label":"GetFilesByStatus","kind":2,"detail":"<void>GetFilesByStatus <index>ProviderIndex <enum>Status <&filename array>FileList\nGetFilesByStatus - no automatic redraw after invoked\nStatus enums: {#Unknown|#NotControlled|#Controlled|#CheckedOut|#CheckedOutOther|#OutOfDate|#Deleted|#Missing|#Modified|#Hidden|#ShareLock|#CanCheckin|#CanCheckout|#CanUndoCheckout|#CanGetLatest|#CanAddFile|#CanShowHistory|#CanShowProperties}\nFileList is Out parameter"},{"label":"GetFromProvider","kind":2,"detail":"<void>GetFromProvider <index>ProviderIndex <string>FilterName <string>FilterExtensions <bool>AddAllFilesFilter <bool>MultiSelect <bool>Download <&filename array>FileList\nGetFromProvider - no automatic redraw after invoked\nFileList is Out parameter"},{"label":"LaunchOptions","kind":2,"detail":"<void>LaunchOptions <index>ProviderIndex\nLaunchOptions - no automatic redraw after invoked"},{"label":"LaunchProvider","kind":2,"detail":"<void>LaunchProvider <index>ProviderIndex\nLaunchProvider - no automatic redraw after invoked"},{"label":"Login","kind":2,"detail":"<void>Login <index>ProviderIndex\nLogin - no automatic redraw after invoked"},{"label":"Logout","kind":2,"detail":"<void>Logout <index>ProviderIndex\nLogout - no automatic redraw after invoked"},{"label":"OpenProject","kind":2,"detail":"<void>OpenProject <index>ProviderIndex <filename>ProjectPath\nOpenProject - no automatic redraw after invoked"},{"label":"Properties","kind":2,"detail":"<void>Properties <index>ProviderIndex <&filename array>FileList\nProperties - no automatic redraw after invoked\nFileList is In parameter"},{"label":"SelectFiles","kind":2,"detail":"<void>SelectFiles <&filename array>FileList\nSelectFiles - no automatic redraw after invoked\nFileList is In parameter"},{"label":"SetActiveProvider","kind":2,"detail":"<void>SetActiveProvider <index>ProviderIndex\nSetActiveProvider - no automatic redraw after invoked"},{"label":"SetWorkingComment","kind":2,"detail":"<void>SetWorkingComment <string>Comment\nSetWorkingComment - no automatic redraw after invoked"},{"label":"SetWorkingFolder","kind":2,"detail":"<void>SetWorkingFolder <index>ProviderIndex <filename>Folder\nSetWorkingFolder - no automatic redraw after invoked"},{"label":"ShowHistory","kind":2,"detail":"<void>ShowHistory <index>ProviderIndex <&filename array>FileList\nShowHistory - no automatic redraw after invoked\nFileList is In parameter"},{"label":"UnRegisterNotification","kind":2,"detail":"<void>UnRegisterNotification <integer>ID\nUnRegisterNotification - no automatic redraw after invoked"}],"tmGizmos":[{"label":"ShowMultipleTransformGizmos","kind":10,"detail":"boolean : Read|Write"},{"label":"arcRotateSnapAngle","kind":10,"detail":"float : Read|Write"},{"label":"centerBoxType","kind":10,"detail":"enum : Read|Write"},{"label":"dragX","kind":10,"detail":"float : Read|Write"},{"label":"dragY","kind":10,"detail":"float : Read|Write"},{"label":"freeRotate","kind":10,"detail":"boolean : Read|Write"},{"label":"intersectMode","kind":10,"detail":"boolean : Read|Write"},{"label":"moveGizmoRelativeSize","kind":10,"detail":"float : Read|Write"},{"label":"movePlaneHandleOffset","kind":10,"detail":"float : Read|Write"},{"label":"movePlaneHandleSize","kind":10,"detail":"float : Read|Write"},{"label":"perpsectiveSensitivity","kind":10,"detail":"float : Read|Write"},{"label":"planeOpacity","kind":10,"detail":"float : Read|Write"},{"label":"rotateGizmoRelativeSize","kind":10,"detail":"float : Read|Write"},{"label":"rotationIncrement","kind":10,"detail":"float : Read|Write"},{"label":"rotationMode","kind":10,"detail":"integer : Read|Write"},{"label":"rotationPlanarThreshold","kind":10,"detail":"float : Read|Write"},{"label":"scaleGizmoRelativeSize","kind":10,"detail":"float : Read|Write"},{"label":"scalePlaneHandleSize","kind":10,"detail":"float : Read|Write"},{"label":"screenHandle","kind":10,"detail":"boolean : Read|Write"},{"label":"showAngleData","kind":10,"detail":"boolean : Read|Write"},{"label":"showMiniTripod","kind":10,"detail":"boolean : Read|Write"},{"label":"showPieSlice","kind":10,"detail":"boolean : Read|Write"},{"label":"size","kind":10,"detail":"integer : Read|Write"},{"label":"sizeUnscaled","kind":10,"detail":"integer : Read|Write"},{"label":"uniformPlaneScaling","kind":10,"detail":"boolean : Read|Write"},{"label":"uniformScaleHandleSize","kind":10,"detail":"float : Read|Write"},{"label":"useCenterBox","kind":10,"detail":"boolean : Read|Write"},{"label":"useGizmo","kind":10,"detail":"boolean : Read|Write"},{"label":"useLabels","kind":10,"detail":"boolean : Read|Write"},{"label":"usePlanes","kind":10,"detail":"boolean : Read|Write"},{"label":"vecX","kind":10,"detail":"float : Read|Write"},{"label":"vecY","kind":10,"detail":"float : Read|Write"},{"label":"centerBoxType","kind":10,"detail":"centerBoxType enums: {#screen|#activeGrid}"}],"UtilityPanel":[{"label":"OpenUtility","kind":2,"detail":"<integer>OpenUtility <class>ClassName"}],"WorkingPivot":[{"label":"AxisSize","kind":10,"detail":"float : Read|Write"},{"label":"EditMode","kind":10,"detail":"boolean : Read|Write"},{"label":"ShowCaddyEdit","kind":10,"detail":"boolean : Read|Write"},{"label":"ShowCaddyPlace","kind":10,"detail":"boolean : Read|Write"},{"label":"UseMode","kind":10,"detail":"boolean : Read|Write"},{"label":"getPinWorkingPivot()","kind":2,"detail":"<boolean>getPinWorkingPivot()"},{"label":"getPlacePivotAlignToView()","kind":2,"detail":"<boolean>getPlacePivotAlignToView()"},{"label":"getPlacePivotSurfaceMode()","kind":2,"detail":"<boolean>getPlacePivotSurfaceMode()"},{"label":"getPlacePivotViewMode()","kind":2,"detail":"<boolean>getPlacePivotViewMode()"},{"label":"getTM()","kind":2,"detail":"<matrix3 by value>getTM()"},{"label":"alignToView()","kind":2,"detail":"<void>alignToView()"},{"label":"resetTMToNode","kind":2,"detail":"<void>resetTMToNode <node>node"},{"label":"setPinWorkingPivot","kind":2,"detail":"<void>setPinWorkingPivot <boolean>on"},{"label":"setPlacePivotSurfaceMode","kind":2,"detail":"<void>setPlacePivotSurfaceMode <boolean>on <boolean>alignToView"},{"label":"setPlacePivotViewMode","kind":2,"detail":"<void>setPlacePivotViewMode <boolean>on <boolean>alignToView"},{"label":"setTM","kind":2,"detail":"<void>setTM <&matrix3>tm\ntm is In and Out parameter"}],"maxOps":[{"label":"IsRenderActive","kind":10,"detail":"boolean : Read"},{"label":"affectChildren","kind":10,"detail":"boolean : Read|Write"},{"label":"autoGrid","kind":10,"detail":"boolean : Read|Write"},{"label":"autoKeyDefaultKeyOn","kind":10,"detail":"boolean : Read|Write"},{"label":"autoKeyDefaultKeyTime","kind":10,"detail":"time : Read|Write"},{"label":"hideFrozenObjects","kind":10,"detail":"boolean : Read|Write"},{"label":"inProgressiveMode","kind":10,"detail":"boolean : Read"},{"label":"isNetworkLicense","kind":10,"detail":"boolean : Read"},{"label":"languageToUseForFileIO","kind":10,"detail":"enum : Read|Write"},{"label":"legacyFilesCanBeStoredUsingUTF8","kind":10,"detail":"bool : Read|Write"},{"label":"mtlDlgMode","kind":10,"detail":"enum : Read|Write"},{"label":"nameSuffixLength","kind":10,"detail":"integer : Read|Write"},{"label":"overrideControllerRangeDefault","kind":10,"detail":"boolean : Read|Write"},{"label":"overrideLanguageSpecifiedInSceneFile","kind":10,"detail":"bool : Read|Write"},{"label":"paintSelBrushSize","kind":10,"detail":"integer : Read|Write"},{"label":"paintSelBrushSizeUnscaled","kind":10,"detail":"integer : Read|Write"},{"label":"pivotMode","kind":10,"detail":"enum : Read|Write"},{"label":"productAppID","kind":10,"detail":"enum : Read"},{"label":"rendUseIterative","kind":10,"detail":"boolean : Read|Write"},{"label":"setKeyFilters","kind":10,"detail":"enum by value array : Read"},{"label":"setKeyMode","kind":10,"detail":"boolean : Read|Write"},{"label":"setKeyNodeSetCurrent","kind":10,"detail":"TSTR : Read|Write"},{"label":"setKeyNodeSets","kind":10,"detail":"TSTR by value array : Read"},{"label":"setKeySuspend","kind":10,"detail":"boolean : Read|Write"},{"label":"showWorldAxis","kind":10,"detail":"boolean : Read|Write"},{"label":"springQuickEditMode","kind":10,"detail":"boolean : Read|Write"},{"label":"springRollingStart","kind":10,"detail":"integer : Read|Write"},{"label":"startNewShapeLock","kind":10,"detail":"boolean : Read|Write"},{"label":"trackbar","kind":10,"detail":"Interface : Read"},{"label":"trajectoryAddKeyMode","kind":10,"detail":"bool : Read|Write"},{"label":"trajectoryKeySubMode","kind":10,"detail":"bool : Read|Write"},{"label":"trajectoryMode","kind":10,"detail":"bool : Read|Write"},{"label":"useCodePageSpecifiedInSceneFile","kind":10,"detail":"bool : Read|Write"},{"label":"languageToUseForFileIO","kind":10,"detail":"languageToUseForFileIO enums: {#current|#English|#German|#French|#Japanese|#Korean|#Chinese}"},{"label":"mtlDlgMode","kind":10,"detail":"mtlDlgMode enums: {#basic|#advanced}"},{"label":"pivotMode","kind":10,"detail":"pivotMode enums: {#none|#pivotOnly|#objectOnly|#hierarchyOnly}"},{"label":"productAppID","kind":10,"detail":"productAppID enums: {#max}"},{"label":"setKeyFilters","kind":10,"detail":"setKeyFilters enums: {#all|#position|#rotation|#scale|#ikParams|#objParams|#custAttribs|#modifiers|#materials|#other}"},{"label":"getViewportShadingSettings()","kind":2,"detail":"<IObject>getViewportShadingSettings()"},{"label":"GetCurRenderElementMgr()","kind":2,"detail":"<Interface>GetCurRenderElementMgr()"},{"label":"GetRenderElementMgr","kind":2,"detail":"<Interface>GetRenderElementMgr <enum>\nenums: {#Production|#Draft}"},{"label":"getTrackBar()","kind":2,"detail":"<Interface>getTrackBar()"},{"label":"IncrementFileName","kind":2,"detail":"<TSTR by value>IncrementFileName <TSTR by value>fileName versionSeparatorString:<TSTR by value>\nversionSeparatorString default value: ''"},{"label":"IncrementImageFileName","kind":2,"detail":"<TSTR by value>IncrementImageFileName <TSTR by value>fileName"},{"label":"IncrementSceneFileName","kind":2,"detail":"<TSTR by value>IncrementSceneFileName <TSTR by value>fileName"},{"label":"CloneNodes","kind":2,"detail":"<bool>CloneNodes <&node array>nodes offset:<point3 by value> expandHierarchy:<bool> cloneType:<enum> actualNodeList:<&node array> newNodes:<&node array>\nnodes is In parameter\noffset default value: [0 , 0 , 0]\nexpandHierarchy default value: false\ncloneType enums: {#copy|#instance|#reference}\ncloneType default value: #copy\nactualNodeList default value: #()\nactualNodeList is Out parameter\nnewNodes default value: #()\nnewNodes is Out parameter"},{"label":"CollapseNodeTo","kind":2,"detail":"<boolean>CollapseNodeTo <node>node <index>modIndex <boolean>noWarning"},{"label":"allTracksSetKeyBufferPresent()","kind":2,"detail":"<boolean>allTracksSetKeyBufferPresent()"},{"label":"canImportBitmap","kind":2,"detail":"<boolean>canImportBitmap <filename>fileName"},{"label":"getSetKeyFilterState","kind":2,"detail":"<boolean>getSetKeyFilterState <enum>filter\nfilter enums: {#all|#position|#rotation|#scale|#ikParams|#objParams|#custAttribs|#modifiers|#materials|#other}"},{"label":"getSetKeyMode()","kind":2,"detail":"<boolean>getSetKeyMode()"},{"label":"loadCUIFile","kind":2,"detail":"<boolean>loadCUIFile <filename>fileName"},{"label":"setSelectionType","kind":2,"detail":"<boolean>setSelectionType <boolean>auto <enum>method\nmethod enums: {#window|#crossing|#leftToRight|#rightToLeft}"},{"label":"setSetKeyFilterState","kind":2,"detail":"<boolean>setSetKeyFilterState <enum>filter <boolean>onOff\nfilter enums: {#all|#position|#rotation|#scale|#ikParams|#objParams|#custAttribs|#modifiers|#materials|#other}"},{"label":"getTransformGizmoTM()","kind":2,"detail":"<matrix3>getTransformGizmoTM()"},{"label":"getNodeByHandle","kind":2,"detail":"<maxObject>getNodeByHandle <DWORD>handle"},{"label":"CollapseNode","kind":2,"detail":"<void>CollapseNode <node>node <boolean>noWarning"},{"label":"activateSetKeyMode","kind":2,"detail":"<void>activateSetKeyMode <boolean>onOff"},{"label":"allTracksCommitSetKeyBuffer()","kind":2,"detail":"<void>allTracksCommitSetKeyBuffer()"},{"label":"allTracksRevertSetKeyBuffer()","kind":2,"detail":"<void>allTracksRevertSetKeyBuffer()"},{"label":"beginProgressiveMode()","kind":2,"detail":"<void>beginProgressiveMode()"},{"label":"colorById","kind":2,"detail":"<void>colorById <DWORD>id <&color>color\ncolor is Out parameter"},{"label":"deleteSelectedAnimation()","kind":2,"detail":"<void>deleteSelectedAnimation()"},{"label":"deleteSelectedTrajectoryKey()","kind":2,"detail":"<void>deleteSelectedTrajectoryKey()"},{"label":"endProgressiveMode()","kind":2,"detail":"<void>endProgressiveMode()"},{"label":"findNodes","kind":2,"detail":"<void>findNodes <&node array>templateNodes <&node array>foundNodes nodePropsToMatch:<&enum array>\ntemplateNodes is In parameter\nfoundNodes is Out parameter\nnodePropsToMatch enums: {#nodePropMaterial|#nodePropLayer}\nnodePropsToMatch default value: #()\nnodePropsToMatch is In parameter"},{"label":"getDefaultTangentType","kind":2,"detail":"<void>getDefaultTangentType <&enum>dfltInTangentType <&enum>dfltOutTangentType\ndfltInTangentType enums: {#smooth|#linear|#step|#fast|#slow|#custom|#flat}\ndfltInTangentType is Out parameter\ndfltOutTangentType enums: {#smooth|#linear|#step|#fast|#slow|#custom|#flat}\ndfltOutTangentType is Out parameter"},{"label":"persistFileLanguageSettings()","kind":2,"detail":"<void>persistFileLanguageSettings()"},{"label":"setActiveViewportTransparencyDisplay","kind":2,"detail":"<void>setActiveViewportTransparencyDisplay <integer>transparencyLevel"},{"label":"setDefaultTangentType","kind":2,"detail":"<void>setDefaultTangentType <enum>dfltInTangentType <enum>dfltOutTangentType writeInCfgFile:<boolean>\ndfltInTangentType enums: {#smooth|#linear|#step|#fast|#slow|#custom|#flat}\ndfltOutTangentType enums: {#smooth|#linear|#step|#fast|#slow|#custom|#flat}\nwriteInCfgFile default value: true"},{"label":"setInNonInteractiveTestMode()","kind":2,"detail":"<void>setInNonInteractiveTestMode()"},{"label":"startNewShape()","kind":2,"detail":"<void>startNewShape()"}],"WorkspaceManager":[{"label":"GetWriteDirectory()","kind":2,"detail":"<TSTR by value>GetWriteDirectory()"},{"label":"CreateNewWorkspace","kind":2,"detail":"<bool>CreateNewWorkspace <string>identifier <string>friendlyName"},{"label":"DeleteWorkspace","kind":2,"detail":"<bool>DeleteWorkspace <string>identifier"},{"label":"GetRunScript","kind":2,"detail":"<bool>GetRunScript <string>identifier"},{"label":"IsSubsystemSaving","kind":2,"detail":"<bool>IsSubsystemSaving <string>identifier <string>subSystemIdentifier"},{"label":"ResetToDefaults","kind":2,"detail":"<bool>ResetToDefaults <string>identifier"},{"label":"SetCurrentWorkspaceByIdentifier","kind":2,"detail":"<bool>SetCurrentWorkspaceByIdentifier <string>identifier"},{"label":"SetEntryScript","kind":2,"detail":"<bool>SetEntryScript <string>identifier <filename>script"},{"label":"SetExitScript","kind":2,"detail":"<bool>SetExitScript <string>identifier <filename>script"},{"label":"SetWorkspaceName","kind":2,"detail":"<bool>SetWorkspaceName <index>index <string>name"},{"label":"SetWorkspaceNameWithIdentifier","kind":2,"detail":"<bool>SetWorkspaceNameWithIdentifier <string>identifier <string>name"},{"label":"ToggleSubsystemSaving","kind":2,"detail":"<bool>ToggleSubsystemSaving <string>identifier <string>subSystemIdentifier"},{"label":"GetEntryScript","kind":2,"detail":"<filename>GetEntryScript <string>identifier"},{"label":"GetExitScript","kind":2,"detail":"<filename>GetExitScript <string>identifier"},{"label":"GetAllSubsystemsCount()","kind":2,"detail":"<integer>GetAllSubsystemsCount()"},{"label":"GetWorkspaceCount()","kind":2,"detail":"<integer>GetWorkspaceCount()"},{"label":"GetCurrentWorkspaceIdentifier()","kind":2,"detail":"<string>GetCurrentWorkspaceIdentifier()"},{"label":"GetSubsystemName","kind":2,"detail":"<string>GetSubsystemName <index>index"},{"label":"GetWorkspaceIdentifier","kind":2,"detail":"<string>GetWorkspaceIdentifier <index>index"},{"label":"GetWorkspaceName","kind":2,"detail":"<string>GetWorkspaceName <index>index"},{"label":"GetWorkspaceNameWithIdentifier","kind":2,"detail":"<string>GetWorkspaceNameWithIdentifier <string>identifier"},{"label":"ToggleRunScript","kind":2,"detail":"<void>ToggleRunScript <string>identifier"}],"BatchProOptimizer":[{"label":"ApplyModifier","kind":10,"detail":"boolean : Read|Write"},{"label":"AutoRename","kind":10,"detail":"bool : Read|Write"},{"label":"CompactFaces","kind":10,"detail":"bool : Read|Write"},{"label":"DestFileNameMode","kind":10,"detail":"integer : Read|Write"},{"label":"DestFileNamePrefix","kind":10,"detail":"string : Read|Write"},{"label":"DestFileNameSuffix","kind":10,"detail":"string : Read|Write"},{"label":"DestFolderMode","kind":10,"detail":"integer : Read|Write"},{"label":"DestFolderName","kind":10,"detail":"string : Read|Write"},{"label":"DestFormatExt","kind":10,"detail":"string : Read|Write"},{"label":"DestFormatMode","kind":10,"detail":"integer : Read|Write"},{"label":"KeepMaterialBoundaries","kind":10,"detail":"bool : Read|Write"},{"label":"KeepNormals","kind":10,"detail":"bool : Read|Write"},{"label":"KeepTexture","kind":10,"detail":"bool : Read|Write"},{"label":"KeepUVBoundaries","kind":10,"detail":"bool : Read|Write"},{"label":"KeepVertexColors","kind":10,"detail":"bool : Read|Write"},{"label":"KeepVertexColorsBoundaries","kind":10,"detail":"bool : Read|Write"},{"label":"LogFilePath","kind":10,"detail":"string : Read|Write"},{"label":"MergeFaces","kind":10,"detail":"bool : Read|Write"},{"label":"MergeFacesThreshold","kind":10,"detail":"float : Read|Write"},{"label":"MergePoints","kind":10,"detail":"bool : Read|Write"},{"label":"MergePointsThreshold","kind":10,"detail":"float : Read|Write"},{"label":"NormalMode","kind":10,"detail":"integer : Read|Write"},{"label":"NormalThreshold","kind":10,"detail":"float : Read|Write"},{"label":"OptimizationLevel1","kind":10,"detail":"integer : Read|Write"},{"label":"OptimizationLevel2","kind":10,"detail":"integer : Read|Write"},{"label":"OptimizationLevel3","kind":10,"detail":"integer : Read|Write"},{"label":"OptimizationLevel4","kind":10,"detail":"integer : Read|Write"},{"label":"OptimizationLevel5","kind":10,"detail":"integer : Read|Write"},{"label":"OptimizationLevelMode","kind":10,"detail":"integer : Read|Write"},{"label":"OptimizationLevelSteps","kind":10,"detail":"integer : Read|Write"},{"label":"OptimizeBordersMode","kind":10,"detail":"integer : Read|Write"},{"label":"OptimizeHidden","kind":10,"detail":"bool : Read|Write"},{"label":"PreventFlippedNormals","kind":10,"detail":"bool : Read|Write"},{"label":"RecreateFolderTree","kind":10,"detail":"bool : Read|Write"},{"label":"SourceFileDir","kind":10,"detail":"string : Read|Write"},{"label":"SourceFileFiles","kind":10,"detail":"filename by value array : Read|Write"},{"label":"SourceFileMode","kind":10,"detail":"integer : Read|Write"},{"label":"SourceFileSubDir","kind":10,"detail":"bool : Read|Write"},{"label":"SymmetryMode","kind":10,"detail":"integer : Read|Write"},{"label":"SymmetryTolerance","kind":10,"detail":"integer : Read|Write"},{"label":"UVTolerance","kind":10,"detail":"float : Read|Write"},{"label":"ValidateDialogs","kind":10,"detail":"boolean : Read|Write"},{"label":"VertexColorsTolerance","kind":10,"detail":"integer : Read|Write"}],"NamedSelectionSetManager":[{"label":"AddNewNamedSelSet","kind":2,"detail":"<boolean>AddNewNamedSelSet <&node array>nodeSet <&TSTR>setName\nAddNewNamedSelSet - no automatic redraw after invoked\nnodeSet is In parameter\nsetName is In parameter"},{"label":"GetNamedSelSetList","kind":2,"detail":"<boolean>GetNamedSelSetList <&node array>nodeSet <integer>setIndex\nGetNamedSelSetList - no automatic redraw after invoked\nnodeSet is In and Out parameter"},{"label":"RemoveNamedSelSetByIndex","kind":2,"detail":"<boolean>RemoveNamedSelSetByIndex <integer>setName\nRemoveNamedSelSetByIndex - no automatic redraw after invoked"},{"label":"RemoveNamedSelSetByName","kind":2,"detail":"<boolean>RemoveNamedSelSetByName <&TSTR>setName\nRemoveNamedSelSetByName - no automatic redraw after invoked\nsetName is In parameter"},{"label":"ReplaceNamedSelSetByIndex","kind":2,"detail":"<boolean>ReplaceNamedSelSetByIndex <&node array>nodeSet <integer>setIndex\nReplaceNamedSelSetByIndex - no automatic redraw after invoked\nnodeSet is In parameter"},{"label":"ReplaceNamedSelSetByName","kind":2,"detail":"<boolean>ReplaceNamedSelSetByName <&node array>nodeSet <&TSTR>setName\nReplaceNamedSelSetByName - no automatic redraw after invoked\nnodeSet is In parameter\nsetName is In parameter"},{"label":"GetNamedSelSetItemCount","kind":2,"detail":"<integer>GetNamedSelSetItemCount <integer>setIndex\nGetNamedSelSetItemCount - no automatic redraw after invoked"},{"label":"GetNamedSelSetItem","kind":2,"detail":"<node>GetNamedSelSetItem <integer>setIndex <integer>itemIndex\nGetNamedSelSetItem - no automatic redraw after invoked"},{"label":"GetNamedSelSetName","kind":2,"detail":"<string>GetNamedSelSetName <integer>setIndex\nGetNamedSelSetName - no automatic redraw after invoked"}],"objXRefs":[{"label":"isFileDisabled","kind":2,"detail":"<boolean>isFileDisabled <filename>fname"},{"label":"isFileUnresolved","kind":2,"detail":"<boolean>isFileUnresolved <filename>fname"},{"label":"reloadFile","kind":2,"detail":"<boolean>reloadFile <filename>fname"},{"label":"getFileName","kind":2,"detail":"<filename>getFileName <index>index"},{"label":"getNumFiles()","kind":2,"detail":"<integer>getNumFiles()"},{"label":"getNumXRefObjects","kind":2,"detail":"<integer>getNumXRefObjects <filename>fname"},{"label":"getAllXRefObjects()","kind":2,"detail":"<maxObject by value array>getAllXRefObjects()"},{"label":"addNewXRefObject","kind":2,"detail":"<maxObject>addNewXRefObject <filename>fname <string>objname <integer>flags"},{"label":"getXRefObject","kind":2,"detail":"<maxObject>getXRefObject <filename>fname <index>index"}],"timeSlider":[{"label":"setVisible","kind":2,"detail":"<void>setVisible <boolean>visible"}],"SME":[{"label":"activeView","kind":10,"detail":"index : Read|Write"},{"label":"GetView","kind":2,"detail":"<IObject>GetView <index>index"},{"label":"GetMainframe()","kind":2,"detail":"<Interface>GetMainframe()"},{"label":"GetMaterialPool()","kind":2,"detail":"<Interface>GetMaterialPool()"},{"label":"GetNavigator()","kind":2,"detail":"<Interface>GetNavigator()"},{"label":"GetParamEditor()","kind":2,"detail":"<Interface>GetParamEditor()"},{"label":"IsOpen()","kind":2,"detail":"<bool>IsOpen()"},{"label":"CreateView","kind":2,"detail":"<index>CreateView <string>name"},{"label":"GetViewByName","kind":2,"detail":"<index>GetViewByName <string>name"},{"label":"GetViewIndex","kind":2,"detail":"<index>GetViewIndex <IObject>view"},{"label":"GetNumViews()","kind":2,"detail":"<integer>GetNumViews()"},{"label":"DoMtlBrowseDlg","kind":2,"detail":"<maxObject>DoMtlBrowseDlg <HWND>parent <DWORD>flags <&boolean>newMat <&boolean>cancel fromLibrary:<*boolean> copiedMaterial:<*boolean>\nnewMat is In and Out parameter\ncancel is In and Out parameter\nfromLibrary default value: undefined\nfromLibrary is In and Out parameter\ncopiedMaterial default value: undefined\ncopiedMaterial is In and Out parameter"},{"label":"GetMtlInParamEditor()","kind":2,"detail":"<maxObject>GetMtlInParamEditor()"},{"label":"Close()","kind":2,"detail":"<void>Close()"},{"label":"DeleteView","kind":2,"detail":"<void>DeleteView <index>index <bool>ask_user"},{"label":"Open()","kind":2,"detail":"<void>Open()"},{"label":"SetMtlInParamEditor","kind":2,"detail":"<void>SetMtlInParamEditor <maxObject>mtlbase"}],"BitmapProxyMgr":[{"label":"globalProxyEnable","kind":10,"detail":"boolean : Read|Write"},{"label":"globalProxyRenderMode","kind":10,"detail":"enum : Read|Write"},{"label":"globalProxySizeFactor","kind":10,"detail":"enum : Read|Write"},{"label":"globalProxySizeMin","kind":10,"detail":"integer : Read|Write"},{"label":"globalProxyRenderMode","kind":10,"detail":"globalProxyRenderMode enums: {#renderMode_UseProxies|#renderMode_UseFullRes_KeepInMemory|#renderMode_UseFullRes_FlushFromMemory}"},{"label":"globalProxySizeFactor","kind":10,"detail":"globalProxySizeFactor enums: {#full|#half|#third|#quarter|#eighth}"},{"label":"GetProxyReady","kind":2,"detail":"<boolean>GetProxyReady <string>bitmap"},{"label":"GetProxyUseGlobal","kind":2,"detail":"<boolean>GetProxyUseGlobal <string>bitmap"},{"label":"GetProxySizeFactor","kind":2,"detail":"<enum>GetProxySizeFactor <string>bitmap\nGetProxySizeFactor enums: {#full|#half|#third|#quarter|#eighth"},{"label":"SetProxySizeFactor","kind":2,"detail":"<void>SetProxySizeFactor <string>bitmap <enum>factor\nfactor enums: {#full|#half|#third|#quarter|#eighth}"},{"label":"SetProxyUseGlobal","kind":2,"detail":"<void>SetProxyUseGlobal <string>bitmap <boolean>useGlobal"}],"ViewCubeOps":[{"label":"All3DViewportsDisplay","kind":10,"detail":"bool : Read|Write"},{"label":"AngleOfNorth","kind":10,"detail":"float : Read|Write"},{"label":"AnimatedTransition","kind":10,"detail":"bool : Read|Write"},{"label":"DragSnapping","kind":10,"detail":"bool : Read|Write"},{"label":"DrawCompass","kind":10,"detail":"bool : Read|Write"},{"label":"FitToView","kind":10,"detail":"bool : Read|Write"},{"label":"KeepSceneUp","kind":10,"detail":"bool : Read|Write"},{"label":"MinOpacity","kind":10,"detail":"float : Read|Write"},{"label":"Size","kind":10,"detail":"integer : Read|Write"},{"label":"Visibility","kind":10,"detail":"bool : Read|Write"}],"SceneMissingPlugIns":[{"label":"GetMissingPlugInCount()","kind":2,"detail":"<integer>GetMissingPlugInCount()"},{"label":"GetMissingPlugInClassName","kind":2,"detail":"<string>GetMissingPlugInClassName <index>Index"},{"label":"GetMissingPlugInFileName","kind":2,"detail":"<string>GetMissingPlugInFileName <index>Index"}],"renderpresets":[{"label":"LoadCategories","kind":2,"detail":"<bitArray>LoadCategories <filename>file"},{"label":"IsFileCompatible","kind":2,"detail":"<boolean>IsFileCompatible <integer>which <filename>file"},{"label":"Load","kind":2,"detail":"<boolean>Load <integer>which <filename>file <bitArray>categories loadNodes:<enum>\nloadNodes enums: {#prompt|#yes|#no|#cancel}\nloadNodes default value: #prompt"},{"label":"LoadAll","kind":2,"detail":"<boolean>LoadAll <integer>which <filename>file"},{"label":"Save","kind":2,"detail":"<boolean>Save <integer>which <filename>file <bitArray>categories"},{"label":"SaveAll","kind":2,"detail":"<boolean>SaveAll <integer>which <filename>file"},{"label":"MapCategoryToIndex","kind":2,"detail":"<integer>MapCategoryToIndex <filename>file <string>category"},{"label":"MapSceneCategoryToIndex","kind":2,"detail":"<integer>MapSceneCategoryToIndex <integer>which <string>category"},{"label":"MapIndexToCategory","kind":2,"detail":"<string>MapIndexToCategory <filename>file <integer>index"},{"label":"MapSceneIndexToCategory","kind":2,"detail":"<string>MapSceneIndexToCategory <integer>which <integer>index"}],"pluginManager":[{"label":"loadedPluginDllSize","kind":10,"detail":"integer : Read"},{"label":"pluginDllCount","kind":10,"detail":"integer : Read"},{"label":"visible","kind":10,"detail":"boolean : Read|Write"},{"label":"pluginDllFullPath","kind":2,"detail":"<TSTR by value>pluginDllFullPath <index>index\npluginDllFullPath - no automatic redraw after invoked"},{"label":"isPluginDllLoaded","kind":2,"detail":"<boolean>isPluginDllLoaded <index>index\nisPluginDllLoaded - no automatic redraw after invoked"},{"label":"loadPluginDll","kind":2,"detail":"<boolean>loadPluginDll <index>index\nloadPluginDll - no automatic redraw after invoked"},{"label":"pluginDllSize","kind":2,"detail":"<integer>pluginDllSize <index>index\npluginDllSize - no automatic redraw after invoked"},{"label":"pluginDllDirectory","kind":2,"detail":"<string>pluginDllDirectory <index>index\npluginDllDirectory - no automatic redraw after invoked"},{"label":"pluginDllName","kind":2,"detail":"<string>pluginDllName <index>index\npluginDllName - no automatic redraw after invoked"}],"particleFlow":[{"label":"makeUnique","kind":2,"detail":"<bool>makeUnique <node>action"},{"label":"cleanUpParticleFlow","kind":2,"detail":"<integer>cleanUpParticleFlow <bool>doReport"},{"label":"getActionOrder()","kind":2,"detail":"<integer>getActionOrder()"},{"label":"getUpdateType()","kind":2,"detail":"<integer>getUpdateType()"},{"label":"setActionOrder","kind":2,"detail":"<integer>setActionOrder <integer>orderType"},{"label":"setUpdateType","kind":2,"detail":"<integer>setUpdateType <integer>updateType"},{"label":"synchronizeLayers","kind":2,"detail":"<integer>synchronizeLayers <bool>doReport"},{"label":"openParticleView()","kind":2,"detail":"<node>openParticleView()"},{"label":"scriptRunner()","kind":2,"detail":"<node>scriptRunner()"},{"label":"beginEdit()","kind":2,"detail":"<void>beginEdit()"},{"label":"delete","kind":2,"detail":"<void>delete <node>particleFlowItem"},{"label":"endEdit()","kind":2,"detail":"<void>endEdit()"},{"label":"presetManager()","kind":2,"detail":"<void>presetManager()"},{"label":"repairCacheSystem","kind":2,"detail":"<void>repairCacheSystem <bool>doReport"},{"label":"resetParticleView()","kind":2,"detail":"<void>resetParticleView()"},{"label":"setNodeEditorDisplayFlags","kind":2,"detail":"<void>setNodeEditorDisplayFlags <integer>displayFlags"}],"paramWire":[{"label":"connect","kind":2,"detail":"<bool>connect <value>fromParam <value>toParam <string>toExpr"},{"label":"connect2Way","kind":2,"detail":"<bool>connect2Way <value>leftParam <value>rightParam <string>leftExpr <string>rightExpr"},{"label":"disconnect","kind":2,"detail":"<bool>disconnect <control>controller"},{"label":"editController","kind":2,"detail":"<void>editController <control>controller"},{"label":"editControllers","kind":2,"detail":"<void>editControllers <control>leftController <control>rightController"},{"label":"editParam","kind":2,"detail":"<void>editParam <value>param"},{"label":"editParams","kind":2,"detail":"<void>editParams <value>leftParam <value>rightParam"},{"label":"openEditor()","kind":2,"detail":"<void>openEditor()"},{"label":"start()","kind":2,"detail":"<void>start()"}],"memStreamMgr":[{"label":"openFile","kind":2,"detail":"<Interface>openFile <filename>fname favor_type:<enum> code_page:<integer>\nfavor_type enums: {#FAVOR_ACP|#FAVOR_UTF8}\nfavor_type default value: #FAVOR_ACP\ncode_page default value: 0"},{"label":"openString","kind":2,"detail":"<Interface>openString <string>string"}],"MeshInspector":[{"label":"Enable","kind":10,"detail":"bool : Read|Write"},{"label":"RepairMesh","kind":10,"detail":"bool : Read|Write"},{"label":"ShowDialog","kind":10,"detail":"bool : Read|Write"}],"MaxRibbon":[{"label":"LoadRibbonConfig","kind":2,"detail":"<void>LoadRibbonConfig <&TSTR>configFile\nLoadRibbonConfig - no automatic redraw after invoked\nconfigFile is In and Out parameter"},{"label":"SaveRibbonConfig","kind":2,"detail":"<void>SaveRibbonConfig <&TSTR>configFile\nSaveRibbonConfig - no automatic redraw after invoked\nconfigFile is In and Out parameter"},{"label":"SetRibbonDockState","kind":2,"detail":"<void>SetRibbonDockState <enum>dockState\nSetRibbonDockState - no automatic redraw after invoked\ndockState enums: {#TopDock|#BottomDock|#LeftDock|#RightDock|#Floating}"},{"label":"SetRibbonOrientation","kind":2,"detail":"<void>SetRibbonOrientation <enum>orientation\nSetRibbonOrientation - no automatic redraw after invoked\norientation enums: {#Horizontal|#Vertical}"},{"label":"ShowRibbon","kind":2,"detail":"<void>ShowRibbon <boolean>show\nShowRibbon - no automatic redraw after invoked"}],"MaterialExplorerManager":[{"label":"LoadMaterialExplorerConfiguration","kind":2,"detail":"<bool>LoadMaterialExplorerConfiguration <&TSTR>configurationFile\nLoadMaterialExplorerConfiguration - no automatic redraw after invoked\nconfigurationFile is In parameter"},{"label":"SaveMaterialExplorerConfiguration","kind":2,"detail":"<bool>SaveMaterialExplorerConfiguration <&TSTR>outputConfigurationFile\nSaveMaterialExplorerConfiguration - no automatic redraw after invoked\noutputConfigurationFile is In parameter"}],"LayerManager":[{"label":"count","kind":10,"detail":"integer : Read"},{"label":"current","kind":10,"detail":"Interface : Read"},{"label":"getLayer","kind":2,"detail":"<Interface>getLayer <integer>which\ngetLayer - no automatic redraw after invoked"},{"label":"getLayerFromName","kind":2,"detail":"<Interface>getLayerFromName <string>name\ngetLayerFromName - no automatic redraw after invoked"},{"label":"newLayerFromName","kind":2,"detail":"<Interface>newLayerFromName <string>name\nnewLayerFromName - no automatic redraw after invoked"},{"label":"deleteLayerByName","kind":2,"detail":"<bool>deleteLayerByName <string>name\ndeleteLayerByName - no automatic redraw after invoked"},{"label":"doesLayerHierarchyContainNodes","kind":2,"detail":"<bool>doesLayerHierarchyContainNodes <string>name\ndoesLayerHierarchyContainNodes - no automatic redraw after invoked"},{"label":"deleteLayerHierarchy","kind":2,"detail":"<integer>deleteLayerHierarchy <string>name forceDelete:<bool>\ndeleteLayerHierarchy - no automatic redraw after invoked\nforceDelete default value: false"},{"label":"editLayerByName","kind":2,"detail":"<void>editLayerByName <string>name\neditLayerByName - no automatic redraw after invoked"},{"label":"layerPropDialog","kind":2,"detail":"<void>layerPropDialog <&maxObject array>layerList\nlayerPropDialog - no automatic redraw after invoked\nlayerList is In and Out parameter"}],"IsolateSelection":[{"label":"ZoomExtents","kind":10,"detail":"boolean : Read|Write"},{"label":"EnterIsolateSelectionMode()","kind":2,"detail":"<boolean>EnterIsolateSelectionMode()"},{"label":"ExitIsolateSelectionMode()","kind":2,"detail":"<boolean>ExitIsolateSelectionMode()"},{"label":"IsNodeIsolated","kind":2,"detail":"<boolean>IsNodeIsolated <node>node"},{"label":"IsolateSelectionModeActive()","kind":2,"detail":"<boolean>IsolateSelectionModeActive()"}],"IsolatedVertices":[{"label":"hasPropertyDlg()","kind":2,"detail":"<bool>hasPropertyDlg()"},{"label":"Check","kind":2,"detail":"<enum>Check <time>time <node>nodeToCheck <&index array>results\nCheck enums: {#Failed|#Vertices|#Edges|#Faces\nresults is In and Out parameter"}],"InstanceMgr":[{"label":"autoMtlPropagation","kind":10,"detail":"boolean : Read|Write"},{"label":"GetInstances","kind":2,"detail":"<DWORD>GetInstances <node>source <&node array>instances\ninstances is Out parameter"},{"label":"SetMtlOnInstances","kind":2,"detail":"<DWORD>SetMtlOnInstances <node>source <material>newMtl"},{"label":"CanMakeModifiersUnique","kind":2,"detail":"<bool>CanMakeModifiersUnique <&node array>nodes <&maxObject array>modifiers\nnodes is In parameter\nmodifiers is In parameter"},{"label":"CanMakeObjectsUnique","kind":2,"detail":"<bool>CanMakeObjectsUnique <&node array>nodes\nnodes is In parameter"},{"label":"MakeControllersUnique","kind":2,"detail":"<bool>MakeControllersUnique <&node array>nodes <&maxObject array>controllers <enum>multiNodeOption\nnodes is In parameter\ncontrollers is In parameter\nmultiNodeOption enums: {#prompt|#individual|#group}"},{"label":"MakeModifiersUnique","kind":2,"detail":"<bool>MakeModifiersUnique <&node array>nodes <&maxObject array>modifiers <enum>multiNodeOption\nnodes is In parameter\nmodifiers is In parameter\nmultiNodeOption enums: {#prompt|#individual|#group}"},{"label":"MakeObjectsUnique","kind":2,"detail":"<bool>MakeObjectsUnique <&node array>nodes <enum>multiNodeOption\nnodes is In parameter\nmultiNodeOption enums: {#prompt|#individual|#group}"}],"AutoTangentMan":[{"label":"NewControllersAutoTangentAlgorithm","kind":10,"detail":"enum : Read|Write"},{"label":"NewControllersAutoTangentAlgorithm","kind":10,"detail":"NewControllersAutoTangentAlgorithm enums: {#unsupported|#legacy|#unified}"},{"label":"SupportsAutoTangent","kind":2,"detail":"<bool>SupportsAutoTangent <maxObject>anim"},{"label":"GetAutoTangentAlgorithm","kind":2,"detail":"<enum>GetAutoTangentAlgorithm <maxObject>anim\nGetAutoTangentAlgorithm enums: {#unsupported|#legacy|#unified"}],"blockMgr":[{"label":"GetInstance","kind":2,"detail":"<Interface>GetInstance <node>node <&node array>instances\ninstances is In and Out parameter"},{"label":"IsInstance","kind":2,"detail":"<Interface>IsInstance <node>node"},{"label":"MakeBlockRefComponent","kind":2,"detail":"<Interface>MakeBlockRefComponent <node>node"},{"label":"GetTopBlock","kind":2,"detail":"<node>GetTopBlock <node>node"}],"BipFixer":[{"label":"DoAdvAngSmoothing","kind":2,"detail":"<void>DoAdvAngSmoothing <&node array>nodeTab <integer>width <float>damping\nnodeTab is In and Out parameter"},{"label":"DoAngBlurring","kind":2,"detail":"<void>DoAngBlurring <&node array>nodeTab <integer>width <float>damping\nnodeTab is In and Out parameter"},{"label":"DoAngSmoothing","kind":2,"detail":"<void>DoAngSmoothing <&node array>nodeTab <integer>width <float>damping\nnodeTab is In and Out parameter"},{"label":"DoKneeWobbleFix","kind":2,"detail":"<void>DoKneeWobbleFix <&node array>nodeTab <float>frameThreshold <float>fluctuationThreshold\nnodeTab is In and Out parameter"},{"label":"DoPosBlurring","kind":2,"detail":"<void>DoPosBlurring <&node array>nodeTab <integer>width <float>damping\nnodeTab is In and Out parameter"},{"label":"DoPosSmoothing","kind":2,"detail":"<void>DoPosSmoothing <&node array>nodeTab <integer>width <float>damping\nnodeTab is In and Out parameter"},{"label":"DoRemoveKeys","kind":2,"detail":"<void>DoRemoveKeys <&node array>nodeTab <integer>intervalWidth <boolean>deleteKeys\nnodeTab is In and Out parameter"}],"BipWorkBench":[{"label":"GetDrawDuringMove()","kind":2,"detail":"<boolean>GetDrawDuringMove()"},{"label":"GetLayerEdit()","kind":2,"detail":"<boolean>GetLayerEdit()"},{"label":"GetLimit180()","kind":2,"detail":"<boolean>GetLimit180()"},{"label":"GetShowX()","kind":2,"detail":"<boolean>GetShowX()"},{"label":"GetShowY()","kind":2,"detail":"<boolean>GetShowY()"},{"label":"getShowZ()","kind":2,"detail":"<boolean>getShowZ()"},{"label":"Open()","kind":2,"detail":"<void>Open()"},{"label":"PosCurveToBipRoot()","kind":2,"detail":"<void>PosCurveToBipRoot()"},{"label":"PosCurveToThisNode","kind":2,"detail":"<void>PosCurveToThisNode <node>relativeToNode"},{"label":"PosCurveToWorld()","kind":2,"detail":"<void>PosCurveToWorld()"},{"label":"ShowAngAccelCurve()","kind":2,"detail":"<void>ShowAngAccelCurve()"},{"label":"ShowAngJerkCurve()","kind":2,"detail":"<void>ShowAngJerkCurve()"},{"label":"ShowAngSpeedCurve()","kind":2,"detail":"<void>ShowAngSpeedCurve()"},{"label":"ShowPosAccelCurve()","kind":2,"detail":"<void>ShowPosAccelCurve()"},{"label":"ShowPosCurve()","kind":2,"detail":"<void>ShowPosCurve()"},{"label":"ShowPosJerkCurve()","kind":2,"detail":"<void>ShowPosJerkCurve()"},{"label":"ShowPosSpeedCurve()","kind":2,"detail":"<void>ShowPosSpeedCurve()"},{"label":"ShowQuatCurve()","kind":2,"detail":"<void>ShowQuatCurve()"},{"label":"ShowQuatXYZ()","kind":2,"detail":"<void>ShowQuatXYZ()"},{"label":"ShowQuatXZY()","kind":2,"detail":"<void>ShowQuatXZY()"},{"label":"ShowQuatYXZ()","kind":2,"detail":"<void>ShowQuatYXZ()"},{"label":"ShowQuatYZX()","kind":2,"detail":"<void>ShowQuatYZX()"},{"label":"ShowQuatZXY()","kind":2,"detail":"<void>ShowQuatZXY()"},{"label":"ToggleDrawDuringMove()","kind":2,"detail":"<void>ToggleDrawDuringMove()"},{"label":"ToggleLayerEdit()","kind":2,"detail":"<void>ToggleLayerEdit()"},{"label":"ToggleLimit180()","kind":2,"detail":"<void>ToggleLimit180()"},{"label":"ToggleShowX()","kind":2,"detail":"<void>ToggleShowX()"},{"label":"ToggleShowY()","kind":2,"detail":"<void>ToggleShowY()"},{"label":"ToggleShowZ()","kind":2,"detail":"<void>ToggleShowZ()"}],"BooleanObjectManager":[{"label":"AppendOperand","kind":2,"detail":"<bool>AppendOperand <index>index <node>boolNode <node>operandNode <bool>hold"},{"label":"GetDisable","kind":2,"detail":"<bool>GetDisable <index>index <index>operandIndex <&bool>disable\ndisable is Out parameter"},{"label":"GetNumBooleanObjects","kind":2,"detail":"<bool>GetNumBooleanObjects <&integer>count\ncount is Out parameter"},{"label":"GetNumberOfChildren","kind":2,"detail":"<bool>GetNumberOfChildren <index>index <index>operandIndex <&integer>children\nchildren is Out parameter"},{"label":"GetNumberOfOperands","kind":2,"detail":"<bool>GetNumberOfOperands <index>index <&integer>count\ncount is Out parameter"},{"label":"GetOperandName","kind":2,"detail":"<bool>GetOperandName <index>index <index>operandIndex <&TSTR>name\nname is Out parameter"},{"label":"GetOperandType","kind":2,"detail":"<bool>GetOperandType <index>index <index>operandIndex <&enum>type\ntype enums: {#system|#generated}\ntype is Out parameter"},{"label":"GetOperationOptions","kind":2,"detail":"<bool>GetOperationOptions <index>index <index>operandIndex <&enum>options\noptions enums: {#none|#imprint|#cookie}\noptions is Out parameter"},{"label":"GetOperationType","kind":2,"detail":"<bool>GetOperationType <index>index <index>operandIndex <&enum>type\ntype enums: {#union|#intersection|#subtraction|#merge|#attach|#insert}\ntype is Out parameter"},{"label":"GetSeamSize","kind":2,"detail":"<bool>GetSeamSize <index>index <index>operandIndex <time>time <&float>size <&interval>interval\nsize is Out parameter\ninterval is In and Out parameter"},{"label":"GetSeamType","kind":2,"detail":"<bool>GetSeamType <index>index <index>operandIndex <&enum>type\ntype enums: {#simple|#fillet}\ntype is Out parameter"},{"label":"GetSolo","kind":2,"detail":"<bool>GetSolo <index>index <index>operandIndex <&bool>solo\nsolo is Out parameter"},{"label":"GetSoloOperandIndex","kind":2,"detail":"<bool>GetSoloOperandIndex <index>index <&index>operandIndex\noperandIndex is Out parameter"},{"label":"GetSubdivs","kind":2,"detail":"<bool>GetSubdivs <index>index <index>operandIndex <time>time <&integer>subdivs <&interval>interval\nsubdivs is Out parameter\ninterval is In and Out parameter"},{"label":"HasSubdivs","kind":2,"detail":"<bool>HasSubdivs <index>index <index>operandIndex <time>time <&bool>sub\nsub is Out parameter"},{"label":"RemoveOperand","kind":2,"detail":"<bool>RemoveOperand <index>index <index>operandIndex"},{"label":"SetDisable","kind":2,"detail":"<bool>SetDisable <index>index <index>operandIndex <bool>disable"},{"label":"SetOperandName","kind":2,"detail":"<bool>SetOperandName <index>index <index>operandIndex <&TSTR>name\nname is In parameter"},{"label":"SetOperationOptions","kind":2,"detail":"<bool>SetOperationOptions <index>index <index>operandIndex <enum>options\noptions enums: {#none|#imprint|#cookie}"},{"label":"SetOperationType","kind":2,"detail":"<bool>SetOperationType <index>index <index>operandIndex <enum>type\ntype enums: {#union|#intersection|#subtraction|#merge|#attach|#insert}"},{"label":"SetSeamSize","kind":2,"detail":"<bool>SetSeamSize <index>index <index>operandIndex <time>time <float>size"},{"label":"SetSeamType","kind":2,"detail":"<bool>SetSeamType <index>index <index>operandIndex <enum>type\ntype enums: {#simple|#fillet}"},{"label":"SetSolo","kind":2,"detail":"<bool>SetSolo <index>index <index>operandIndex <bool>solo"},{"label":"SetSubdivs","kind":2,"detail":"<bool>SetSubdivs <index>index <index>operandIndex <time>time <integer>subdivs"}],"browserMgr":[{"label":"newBrowser","kind":2,"detail":"<Interface>newBrowser <string>rootURL <boolean>showDirectory <boolean>showContent <boolean>showToolbar <boolean>showMenu"},{"label":"numBrowsers()","kind":2,"detail":"<integer>numBrowsers()"}],"CreaseSetManager":[{"label":"CanSetCreaseColor","kind":2,"detail":"<bool>CanSetCreaseColor <index>index"},{"label":"CanSetCreaseColorVisibility","kind":2,"detail":"<bool>CanSetCreaseColorVisibility <index>index"},{"label":"CanSetCreaseContainerName","kind":2,"detail":"<bool>CanSetCreaseContainerName <index>index"},{"label":"CanSetCreaseName","kind":2,"detail":"<bool>CanSetCreaseName <index>index"},{"label":"CanSetCreaseValue","kind":2,"detail":"<bool>CanSetCreaseValue <index>index"},{"label":"GetCreaseColor","kind":2,"detail":"<bool>GetCreaseColor <index>index <&color>color\ncolor is Out parameter"},{"label":"GetCreaseColorVisibility","kind":2,"detail":"<bool>GetCreaseColorVisibility <index>index"},{"label":"GetCreaseContainerName","kind":2,"detail":"<bool>GetCreaseContainerName <index>index <&TSTR>name\nname is Out parameter"},{"label":"GetCreaseEntityCount","kind":2,"detail":"<bool>GetCreaseEntityCount <index>index <&integer>count\ncount is Out parameter"},{"label":"GetCreaseName","kind":2,"detail":"<bool>GetCreaseName <index>index <&TSTR>name\nname is Out parameter"},{"label":"GetCreaseType","kind":2,"detail":"<bool>GetCreaseType <index>index <&integer>type\ntype is Out parameter"},{"label":"GetCreaseValue","kind":2,"detail":"<bool>GetCreaseValue <index>index <time>time <&float>value <&interval>interval\nvalue is Out parameter\ninterval is In and Out parameter"},{"label":"GetNodelistAll","kind":2,"detail":"<bool>GetNodelistAll <&node array>nodetab\nnodetab is Out parameter"},{"label":"GetNodelistSingle","kind":2,"detail":"<bool>GetNodelistSingle <index>index <&node array>nodetab\nnodetab is Out parameter"},{"label":"GetNumCreaseSets","kind":2,"detail":"<bool>GetNumCreaseSets <&integer>count\ncount is Out parameter"},{"label":"GetValidity","kind":2,"detail":"<bool>GetValidity <time>time <&interval>interval\ninterval is Out parameter"},{"label":"SetCreaseColor","kind":2,"detail":"<bool>SetCreaseColor <index>index <color>color"},{"label":"SetCreaseContainerName","kind":2,"detail":"<bool>SetCreaseContainerName <index>index <string>name"},{"label":"SetCreaseName","kind":2,"detail":"<bool>SetCreaseName <index>index <string>name"},{"label":"SetCreaseValue","kind":2,"detail":"<bool>SetCreaseValue <index>index <time>time <float>value"}],"defaultActions":[{"label":"getMsgLogMsgs","kind":2,"detail":"<TSTR by value array>getMsgLogMsgs <enum>eventID\neventID enums: {#missingExtFiles|#missingDLLs|#missingXRefs|#missingUVW|#unsupportedRendereffect|#invalidXRefFiles}"},{"label":"getActionTitle","kind":2,"detail":"<TSTR by value>getActionTitle <enum>eventID\neventID enums: {#missingExtFiles|#missingDLLs|#missingXRefs|#missingUVW|#unsupportedRendereffect|#invalidXRefFiles}"},{"label":"getActionTitleByIndex","kind":2,"detail":"<TSTR by value>getActionTitleByIndex <index>index"},{"label":"getMsgLogMsg","kind":2,"detail":"<TSTR by value>getMsgLogMsg <enum>eventID <index>index\neventID enums: {#missingExtFiles|#missingDLLs|#missingXRefs|#missingUVW|#unsupportedRendereffect|#invalidXRefFiles}"},{"label":"deleteAction","kind":2,"detail":"<boolean>deleteAction <enum>eventID\neventID enums: {#missingExtFiles|#missingDLLs|#missingXRefs|#missingUVW|#unsupportedRendereffect|#invalidXRefFiles}"},{"label":"getAction","kind":2,"detail":"<boolean>getAction <enum>eventID <&enum array>action\neventID enums: {#missingExtFiles|#missingDLLs|#missingXRefs|#missingUVW|#unsupportedRendereffect|#invalidXRefFiles}\naction enums: {#logToFile|#logmsg|#abort}\naction is Out parameter"},{"label":"logEntry","kind":2,"detail":"<boolean>logEntry <enum>eventID <string>message\neventID enums: {#missingExtFiles|#missingDLLs|#missingXRefs|#missingUVW|#unsupportedRendereffect|#invalidXRefFiles}"},{"label":"setAction","kind":2,"detail":"<boolean>setAction <enum>eventID <&enum array>action title:<string> oldAction:<&enum array>\neventID enums: {#missingExtFiles|#missingDLLs|#missingXRefs|#missingUVW|#unsupportedRendereffect|#invalidXRefFiles}\naction enums: {#logToFile|#logmsg|#abort}\naction is In parameter\ntitle default value: undefined\noldAction enums: {#logToFile|#logmsg|#abort}\noldAction default value: #()\noldAction is Out parameter"},{"label":"getActionIDByIndex","kind":2,"detail":"<enum>getActionIDByIndex <index>index\ngetActionIDByIndex enums: {#missingExtFiles|#missingDLLs|#missingXRefs|#missingUVW|#unsupportedRendereffect|#invalidXRefFiles"},{"label":"getMsgLogID","kind":2,"detail":"<enum>getMsgLogID <index>index\ngetMsgLogID enums: {#missingExtFiles|#missingDLLs|#missingXRefs|#missingUVW|#unsupportedRendereffect|#invalidXRefFiles"},{"label":"getActionCount()","kind":2,"detail":"<integer>getActionCount()"},{"label":"getMsgLogCount","kind":2,"detail":"<integer>getMsgLogCount <enum>eventID\neventID enums: {#missingExtFiles|#missingDLLs|#missingXRefs|#missingUVW|#unsupportedRendereffect|#invalidXRefFiles}"},{"label":"MsgLogClear","kind":2,"detail":"<void>MsgLogClear <enum>eventID\neventID enums: {#missingExtFiles|#missingDLLs|#missingXRefs|#missingUVW|#unsupportedRendereffect|#invalidXRefFiles}"}],"dragAndDrop":[{"label":"DownloadUrlToDisk","kind":2,"detail":"<boolean>DownloadUrlToDisk <string>url <filename>fileName <integer>flags"},{"label":"downloadPackage","kind":2,"detail":"<boolean>downloadPackage <&filename array>files <filename>directory <boolean>showProgress\nfiles is In and Out parameter"},{"label":"dropPackage","kind":2,"detail":"<boolean>dropPackage <HWND>window <&point>mousePoint <&filename array>files applyUIScaling:<bool>\nmousePoint is In and Out parameter\nfiles is In and Out parameter\napplyUIScaling default value: true"},{"label":"enableDragAndDrop","kind":2,"detail":"<boolean>enableDragAndDrop <HWND>window <boolean>onOff"},{"label":"isEnabled()","kind":2,"detail":"<boolean>isEnabled()"},{"label":"getDownloadDirectory()","kind":2,"detail":"<filename>getDownloadDirectory()"},{"label":"globalEnableDragAndDrop","kind":2,"detail":"<void>globalEnableDragAndDrop <boolean>onOff"}],"dxshadermanager":[{"label":"IsVisible()","kind":2,"detail":"<boolean>IsVisible()"},{"label":"SetVisible","kind":2,"detail":"<float>SetVisible <boolean>show"},{"label":"getViewportManager","kind":2,"detail":"<maxObject>getViewportManager <material>material"}],"EPolyManipGrip":[{"label":"SetManipulateGrip","kind":2,"detail":"<void>SetManipulateGrip <bool>on <enum>gripItem\ngripItem enums: {#SSFalloff|#SSBubble|#SSPinch|#SetFlow|#LoopShift|#RingShift|#EdgeCrease|#EdgeWeight|#VertexWeight|#VertexCrease}"}],"FileResolutionManager":[{"label":"GetMaximumCacheDuration()","kind":2,"detail":"<DWORD>GetMaximumCacheDuration()"},{"label":"GetNumCacheHit()","kind":2,"detail":"<INT64>GetNumCacheHit()"},{"label":"IsCachingEnabled()","kind":2,"detail":"<bool>IsCachingEnabled()"},{"label":"getFullFilePath","kind":2,"detail":"<bool>getFullFilePath <&TSTR>filePath <enum>assetType byPassCache:<bool>\nfilePath is In and Out parameter\nassetType enums: {#Other|#Bitmap|#XRef|#Photometric|#Animation|#VideoPost|#BatchRender|#ExternalLink|#RenderOutput|#PreRenderScript|#PostRenderScript|#Sound|#Container|#MaxCreationGraph}\nbyPassCache default value: false"},{"label":"getFullFilePath_assetID","kind":2,"detail":"<bool>getFullFilePath_assetID <TSTR>assetID <&TSTR>filePath byPassCache:<bool>\nfilePath is Out parameter\nbyPassCache default value: false"},{"label":"GetNumAssetTypes()","kind":2,"detail":"<integer>GetNumAssetTypes()"},{"label":"DisableCaching()","kind":2,"detail":"<void>DisableCaching()"},{"label":"EnableCaching()","kind":2,"detail":"<void>EnableCaching()"},{"label":"SetMaximumCacheDuration","kind":2,"detail":"<void>SetMaximumCacheDuration <DWORD>newMaxDuration"},{"label":"doGetUniversalFileName","kind":2,"detail":"<void>doGetUniversalFileName <&TSTR>aFullFilePath\naFullFilePath is In and Out parameter"}],"FrameTagManager":[{"label":"CreateNewTag","kind":2,"detail":"<DWORD>CreateNewTag <string>name <time>time lockID:<DWORD> scale:<boolean>\nlockID default value: 0\nscale default value: true"},{"label":"GetLockIDByID","kind":2,"detail":"<DWORD>GetLockIDByID <DWORD>id"},{"label":"GetTagID","kind":2,"detail":"<DWORD>GetTagID <index>index"},{"label":"GetNameByID","kind":2,"detail":"<TSTR>GetNameByID <DWORD>id"},{"label":"GetScaleByID","kind":2,"detail":"<boolean>GetScaleByID <DWORD>id"},{"label":"SetLockIDByID","kind":2,"detail":"<boolean>SetLockIDByID <DWORD>id <DWORD>lockID"},{"label":"FindItem","kind":2,"detail":"<index>FindItem <DWORD>id"},{"label":"FindItemByTime","kind":2,"detail":"<index>FindItemByTime <time>time"},{"label":"GetTagCount()","kind":2,"detail":"<integer>GetTagCount()"},{"label":"GetTimeByID","kind":2,"detail":"<time>GetTimeByID <DWORD>id relative:<boolean>\nrelative default value: false"},{"label":"DeleteTag","kind":2,"detail":"<void>DeleteTag <DWORD>id"},{"label":"ResetFrameTags()","kind":2,"detail":"<void>ResetFrameTags()"},{"label":"SetNameByID","kind":2,"detail":"<void>SetNameByID <DWORD>id <&TSTR>name\nname is In parameter"},{"label":"SetScaleByID","kind":2,"detail":"<void>SetScaleByID <DWORD>id <boolean>scale"},{"label":"SetTimeByID","kind":2,"detail":"<void>SetTimeByID <DWORD>id <time>time relative:<boolean>\nrelative default value: false"}],"Hair":[{"label":"CanUseLights","kind":2,"detail":"<boolean>CanUseLights <node array>nodes"},{"label":"AddEffect","kind":2,"detail":"<void>AddEffect <boolean>showGUI"},{"label":"AddHairProperties","kind":2,"detail":"<void>AddHairProperties <node array>nodes"},{"label":"AddMod","kind":2,"detail":"<void>AddMod <node array>nodes"},{"label":"ExportDRA","kind":2,"detail":"<void>ExportDRA <filename>draFileName <time>time <integer>voxels"},{"label":"ExportDRA2","kind":2,"detail":"<void>ExportDRA2 <filename>draFileName <time>time <integer>voxels <&integer array>shaveNodeIDs\nshaveNodeIDs is In and Out parameter"},{"label":"Purge()","kind":2,"detail":"<void>Purge()"},{"label":"RemoveHairProperties","kind":2,"detail":"<void>RemoveHairProperties <node array>nodes"}],"IAutoCamMax":[{"label":"HidePivotBall","kind":2,"detail":"<void>HidePivotBall <HWND>hwnd"},{"label":"ShowPivotBall","kind":2,"detail":"<void>ShowPivotBall <HWND>hwnd <&point2>mouse <&point3>center <boolean>useMousePoint applyUIScaling:<bool>\nmouse is In and Out parameter\ncenter is In and Out parameter\napplyUIScaling default value: true"}],"msZip":[{"label":"fileInPackage","kind":2,"detail":"<boolean>fileInPackage <filename>fileName <&TSTR>extractDir\nextractDir is Out parameter"}],"MultipleEdges":[{"label":"hasPropertyDlg()","kind":2,"detail":"<bool>hasPropertyDlg()"},{"label":"Check","kind":2,"detail":"<enum>Check <time>time <node>nodeToCheck <&index array>results\nCheck enums: {#Failed|#Vertices|#Edges|#Faces\nresults is In and Out parameter"}],"OverlappedUVWFaces":[{"label":"hasPropertyDlg()","kind":2,"detail":"<bool>hasPropertyDlg()"},{"label":"Check","kind":2,"detail":"<enum>Check <time>time <node>nodeToCheck <&index array>results\nCheck enums: {#Failed|#Vertices|#Edges|#Faces\nresults is In and Out parameter"}],"python":[{"label":"Execute","kind":2,"detail":"<enum>Execute <string>script filelabel:<filename> throwOnError:<bool> clearUndoBuffer:<bool>\nExecute enums: {#success|#pathError|#argumentError|#initError|#scriptFileError|#executeError\nfileName default value: undefined\nthrowOnError default value: true\nclearUndoBuffer default value: false"},{"label":"ExecuteFile","kind":2,"detail":"<enum>ExecuteFile <filename>fileName throwOnError:<bool> clearUndoBuffer:<bool>\nExecuteFile enums: {#success|#pathError|#argumentError|#initError|#scriptFileError|#executeError\nthrowOnError default value: true\nclearUndoBuffer default value: false"},{"label":"Import","kind":2,"detail":"<value>Import <string>moduleName throwOnError:<bool>\nthrowOnError default value: true"},{"label":"Reload","kind":2,"detail":"<value>Reload <value>module throwOnError:<bool>\nthrowOnError default value: true"}],"SkinUtils":[{"label":"GetBoneBindTM","kind":2,"detail":"<matrix3 by value>GetBoneBindTM <node>skinNode <node>boneNode"},{"label":"GetBoneStretchTM","kind":2,"detail":"<matrix3 by value>GetBoneStretchTM <node>skinNode <node>boneNode"},{"label":"GetMeshBindTM","kind":2,"detail":"<matrix3 by value>GetMeshBindTM <node>skinNode"},{"label":"ExtractSkinData","kind":2,"detail":"<void>ExtractSkinData <node>node"},{"label":"GrowSelection","kind":2,"detail":"<void>GrowSelection <node>skinNode"},{"label":"ImportSkinData","kind":2,"detail":"<void>ImportSkinData <node>targetNode <node>sourceNode"},{"label":"LoopSelection","kind":2,"detail":"<void>LoopSelection <node>skinNode"},{"label":"RingSelection","kind":2,"detail":"<void>RingSelection <node>skinNode"},{"label":"SetBoneBindTM","kind":2,"detail":"<void>SetBoneBindTM <node>skinNode <node>boneNode <matrix3 by value>tm"},{"label":"SetBoneStretchTM","kind":2,"detail":"<void>SetBoneStretchTM <node>skinNode <node>boneNode <matrix3 by value>tm"},{"label":"SetMeshBindTM","kind":2,"detail":"<void>SetMeshBindTM <node>skinNode <matrix3 by value>tm"},{"label":"ShrinkSelection","kind":2,"detail":"<void>ShrinkSelection <node>skinNode"}],"ContainerPreferences":[{"label":"displayStatusOverride","kind":10,"detail":"enum : Read|Write"},{"label":"saveAsPreviousAccessType","kind":10,"detail":"enum : Read|Write"},{"label":"updateCheck","kind":10,"detail":"boolean : Read|Write"},{"label":"updateOnLoad","kind":10,"detail":"boolean : Read|Write"},{"label":"updateOnReload","kind":10,"detail":"boolean : Read|Write"},{"label":"displayStatusOverride","kind":10,"detail":"displayStatusOverride enums: {#always|#never|#perContainer}"},{"label":"saveAsPreviousAccessType","kind":10,"detail":"saveAsPreviousAccessType enums: {#noAccess|#onlyEditInPlace|#onlyAddNewObjects|#anythingUnlocked}"}],"custAttribCollapseManager":[{"label":"retainSubAnimCAs","kind":10,"detail":"boolean : Read|Write"},{"label":"surviveState","kind":10,"detail":"boolean : Read|Write"}],"globalDXDisplayManager":[{"label":"forceSelected","kind":10,"detail":"boolean : Read|Write"},{"label":"forceSoftware","kind":10,"detail":"boolean : Read|Write"},{"label":"sceneEffectActive","kind":10,"detail":"boolean : Read|Write"}],"iDisplayGamma":[{"label":"LUTFileName","kind":10,"detail":"filename : Read|Write"},{"label":"affectColorPickers","kind":10,"detail":"boolean : Read|Write"},{"label":"affectMEdit","kind":10,"detail":"boolean : Read|Write"},{"label":"colorCorrectionMode","kind":10,"detail":"enum : Read|Write"},{"label":"colorCorrectionPrefMode","kind":10,"detail":"enum : Read|Write"},{"label":"gamma","kind":10,"detail":"float : Read|Write"},{"label":"colorCorrectionMode","kind":10,"detail":"colorCorrectionMode enums: {#LUT|#gamma|#none}"},{"label":"colorCorrectionPrefMode","kind":10,"detail":"colorCorrectionPrefMode enums: {#LUT|#gamma|#none}"}],"PseudoColorManager":[{"label":"rangeEnd","kind":10,"detail":"float : Read|Write"},{"label":"rangeStart","kind":10,"detail":"float : Read|Write"},{"label":"scaleType","kind":10,"detail":"enum : Read|Write"},{"label":"scaleType","kind":10,"detail":"scaleType enums: {#linear|#logarithmic}"}],"CustomControlsOptions":[{"label":"PrintIconPaths","kind":10,"detail":"bool : Read|Write"},{"label":"PrintTextClippingIssues","kind":10,"detail":"bool : Read|Write"},{"label":"TextClippingIssuesSensitivityX","kind":10,"detail":"integer : Read|Write"},{"label":"TextClippingIssuesSensitivityY","kind":10,"detail":"integer : Read|Write"},{"label":"UIUserScaleFactor","kind":10,"detail":"float : Read|Write"},{"label":"SetPrintIconPathsPersist","kind":2,"detail":"<void>SetPrintIconPathsPersist <bool>print_paths <bool>persist"},{"label":"SetPrintTextClippingIssuesPersist","kind":2,"detail":"<void>SetPrintTextClippingIssuesPersist <bool>print_issues <bool>persist"},{"label":"SetTextClippingIssuesSensitivityXPersist","kind":2,"detail":"<void>SetTextClippingIssuesSensitivityXPersist <integer>sensitivity <bool>persist"}],"IViewportShadingMgr":[{"label":"AutoDisplaySelLights","kind":10,"detail":"bool : Read|Write"},{"label":"DefaultLightCastShadows","kind":10,"detail":"bool : Read|Write"},{"label":"GlobalShadowIntensity","kind":10,"detail":"float : Read|Write"},{"label":"MaxActiveLight","kind":10,"detail":"integer : Read|Write"},{"label":"ShadingLimits","kind":10,"detail":"enum : Read|Write"},{"label":"ShadowFilterSize","kind":10,"detail":"float : Read|Write"},{"label":"UpdateShadowsInActiveViewportOnly","kind":10,"detail":"bool : Read|Write"},{"label":"UseGITransparency","kind":10,"detail":"bool : Read|Write"},{"label":"UseTransparencyInShadows","kind":10,"detail":"bool : Read|Write"},{"label":"ShadingLimits","kind":10,"detail":"ShadingLimits enums: {#None|#Good|#Best}"},{"label":"IsLightNodeSupported","kind":2,"detail":"<bool>IsLightNodeSupported <node>LightNode"},{"label":"IsShadingLimitValid","kind":2,"detail":"<bool>IsShadingLimitValid <enum>ShadingLimits\nShadingLimits enums: {#None|#Good|#Best}"},{"label":"CastShadowsSelectedOnly","kind":2,"detail":"<void>CastShadowsSelectedOnly <bool>Enabled"},{"label":"DisplayOnlySelectedLights()","kind":2,"detail":"<void>DisplayOnlySelectedLights()"},{"label":"GetViewportShadingLights","kind":2,"detail":"<void>GetViewportShadingLights <&node array>nodeList <enum>lightProperty\nnodeList is In and Out parameter\nlightProperty enums: {#ShadowCasting|#Illuminating|#Locked}"},{"label":"LockSelectedLights","kind":2,"detail":"<void>LockSelectedLights <bool>locked"},{"label":"ReviewGPUDiagnostics()","kind":2,"detail":"<void>ReviewGPUDiagnostics()"},{"label":"SelectIlluminatingLights()","kind":2,"detail":"<void>SelectIlluminatingLights()"},{"label":"SelectShadowCastingLights()","kind":2,"detail":"<void>SelectShadowCastingLights()"}],"DialogMonitorOPS":[{"label":"Enabled","kind":10,"detail":"bool : Read|Write"},{"label":"Interactive","kind":10,"detail":"bool : Read|Write"},{"label":"RegisterNotification","kind":2,"detail":"<bool>RegisterNotification <value>Callback ID:<name>\nRegisterNotification - no automatic redraw after invoked\nID default value: undefined"}],"LockedTracksMan":[{"label":"unLockOverride","kind":10,"detail":"bool : Read|Write"},{"label":"GetExposedUI","kind":2,"detail":"<bool>GetExposedUI <maxObject>anim"},{"label":"GetLocked","kind":2,"detail":"<bool>GetLocked <maxObject>anim <maxObject>client <index>subNum <bool>checkOverride"},{"label":"IsLockable","kind":2,"detail":"<bool>IsLockable <maxObject>anim <maxObject>client <index>subNum"},{"label":"GetUberUnLockOverride()","kind":2,"detail":"<integer>GetUberUnLockOverride()"},{"label":"FindLockedAnims","kind":2,"detail":"<void>FindLockedAnims <bool>locked <bool>checkOverride <maxObject>refTarget <&maxObject array>anims <&maxObject array>clients <&index array>subNums\nanims is In and Out parameter\nclients is In and Out parameter\nsubNums is In and Out parameter"},{"label":"PopUberUnLockOverride()","kind":2,"detail":"<void>PopUberUnLockOverride()"},{"label":"PushUberUnLockOverride()","kind":2,"detail":"<void>PushUberUnLockOverride()"},{"label":"SetExposedUI","kind":2,"detail":"<void>SetExposedUI <bool>expose <&maxObject array>anims\nanims is In and Out parameter"},{"label":"SetLocks","kind":2,"detail":"<void>SetLocks <bool>lock <&maxObject array>anims <&maxObject array>clients <&index array>subNums <bool>includeChildren\nanims is In and Out parameter\nclients is In and Out parameter\nsubNums is In and Out parameter"},{"label":"ToggleLocks","kind":2,"detail":"<void>ToggleLocks <&maxObject array>anims <&maxObject array>clients <&index array>subNums <bool>includeChildren\nanims is In and Out parameter\nclients is In and Out parameter\nsubNums is In and Out parameter"},{"label":"UnlockChildren","kind":2,"detail":"<void>UnlockChildren <&maxObject array>anims <&maxObject array>clients <&index array>subNums\nanims is In and Out parameter\nclients is In and Out parameter\nsubNums is In and Out parameter"}],"OverlappingFaces":[{"label":"tolerance","kind":10,"detail":"float : Read|Write"},{"label":"hasPropertyDlg()","kind":2,"detail":"<bool>hasPropertyDlg()"},{"label":"Check","kind":2,"detail":"<enum>Check <time>time <node>nodeToCheck <&index array>results\nCheck enums: {#Failed|#Vertices|#Edges|#Faces\nresults is In and Out parameter"}],"renderMessageManager":[{"label":"LogDebugMessage","kind":10,"detail":"bool : Read|Write"},{"label":"LogFileAppend","kind":10,"detail":"bool : Read|Write"},{"label":"LogFileON","kind":10,"detail":"bool : Read|Write"},{"label":"LogFilename","kind":10,"detail":"string : Read|Write"},{"label":"OpenOnError","kind":10,"detail":"bool : Read|Write"},{"label":"ShowInfoMessage","kind":10,"detail":"bool : Read|Write"},{"label":"ShowProgressMessage","kind":10,"detail":"bool : Read|Write"},{"label":"OpenWindow()","kind":2,"detail":"<bool>OpenWindow()"},{"label":"HideWindow()","kind":2,"detail":"<void>HideWindow()"}],"MXSDebugger":[{"label":"allowBreakOnThrow","kind":10,"detail":"boolean : Read|Write"},{"label":"allowUnsafeMethods","kind":10,"detail":"boolean : Read|Write"},{"label":"breakCyclePeriod","kind":10,"detail":"DWORD : Read|Write"},{"label":"breakOnError","kind":10,"detail":"boolean : Read|Write"},{"label":"breakOnException","kind":10,"detail":"boolean : Read|Write"},{"label":"breakTimeoutPeriod","kind":10,"detail":"DWORD : Read|Write"},{"label":"clearOutputOnOpen","kind":10,"detail":"boolean : Read|Write"},{"label":"commandTimeOutPeriod","kind":10,"detail":"DWORD : Read|Write"},{"label":"defaultBreakOnThrow","kind":10,"detail":"boolean : Read|Write"},{"label":"enabledInNetRender","kind":10,"detail":"boolean : Read|Write"},{"label":"enabledInQuietMode","kind":10,"detail":"boolean : Read|Write"},{"label":"gcTimeoutPeriod","kind":10,"detail":"DWORD : Read|Write"},{"label":"hWnd","kind":10,"detail":"HWND : Read"},{"label":"ignoreCaughtErrors","kind":10,"detail":"boolean : Read|Write"},{"label":"ignoreCaughtExceptions","kind":10,"detail":"boolean : Read|Write"},{"label":"ignoreCaughtThrows","kind":10,"detail":"boolean : Read|Write"},{"label":"isDialogOpen","kind":10,"detail":"boolean : Read"},{"label":"showFirstFrameOnly","kind":10,"detail":"boolean : Read|Write"},{"label":"showGlobalConstants","kind":10,"detail":"boolean : Read|Write"},{"label":"stayOnTop","kind":10,"detail":"boolean : Read|Write"},{"label":"closeDialog()","kind":2,"detail":"<void>closeDialog()"},{"label":"writeString","kind":2,"detail":"<void>writeString <string>message"}]}